// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnnamHS_App_Backend.Data;

#nullable disable

namespace UnnamHS_App_Backend.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Book", b =>
                {
                    b.Property<string>("BookCode")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("Isbn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kdc")
                        .HasColumnType("TEXT");

                    b.Property<string>("MajorClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookCode");

                    b.HasIndex("Isbn");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Bookmark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BookCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GoalPage")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastReadAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PageCurrent")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PageTotal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookCode");

                    b.HasIndex("UserId", "BookCode")
                        .IsUnique();

                    b.ToTable("Bookmarks");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.BorrowRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BookCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BorrowedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExtensionCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookCode");

                    b.HasIndex("UserId");

                    b.ToTable("BorrowRecords");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BasePrice")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("MenuId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.OptionItem", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("PriceDelta")
                        .HasColumnType("INTEGER");

                    b.HasKey("OptionId");

                    b.ToTable("OptionItems");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Request")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ToGo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("StudentCode");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.OrderLine", b =>
                {
                    b.Property<long>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LineNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LinePrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId", "LineNo");

                    b.HasIndex("MenuId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.OrderLineOption", b =>
                {
                    b.Property<long>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LineNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OptionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId", "LineNo", "OptionId");

                    b.HasIndex("OptionId");

                    b.ToTable("OrderLineOptions");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.PointHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentCode");

                    b.ToTable("PointHistories");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Stock", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuId", "Date");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Student", b =>
                {
                    b.Property<string>("StudentCode")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("StudentCode");

                    b.HasIndex("StudentCode")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentCode")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Bookmark", b =>
                {
                    b.HasOne("UnnamHS_App_Backend.Models.Book", "Book")
                        .WithMany("Bookmarks")
                        .HasForeignKey("BookCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnnamHS_App_Backend.Models.User", "User")
                        .WithMany("Bookmarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.BorrowRecord", b =>
                {
                    b.HasOne("UnnamHS_App_Backend.Models.Book", "Book")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("BookCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UnnamHS_App_Backend.Models.User", "User")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Order", b =>
                {
                    b.HasOne("UnnamHS_App_Backend.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.OrderLine", b =>
                {
                    b.HasOne("UnnamHS_App_Backend.Models.MenuItem", "MenuItem")
                        .WithMany("Lines")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UnnamHS_App_Backend.Models.Order", "Order")
                        .WithMany("Lines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.OrderLineOption", b =>
                {
                    b.HasOne("UnnamHS_App_Backend.Models.OptionItem", "OptionItem")
                        .WithMany("OrderLineOptions")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UnnamHS_App_Backend.Models.OrderLine", "OrderLine")
                        .WithMany("Options")
                        .HasForeignKey("OrderId", "LineNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OptionItem");

                    b.Navigation("OrderLine");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.PointHistory", b =>
                {
                    b.HasOne("UnnamHS_App_Backend.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Stock", b =>
                {
                    b.HasOne("UnnamHS_App_Backend.Models.MenuItem", "MenuItem")
                        .WithMany("Stocks")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.User", b =>
                {
                    b.HasOne("UnnamHS_App_Backend.Models.Student", "Student")
                        .WithOne("User")
                        .HasForeignKey("UnnamHS_App_Backend.Models.User", "StudentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Book", b =>
                {
                    b.Navigation("Bookmarks");

                    b.Navigation("BorrowRecords");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.MenuItem", b =>
                {
                    b.Navigation("Lines");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.OptionItem", b =>
                {
                    b.Navigation("OrderLineOptions");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Order", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.OrderLine", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.Student", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("UnnamHS_App_Backend.Models.User", b =>
                {
                    b.Navigation("Bookmarks");

                    b.Navigation("BorrowRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
